[
  {
    "slug": "/changelog",
    "title": "Changelog",
    "description": "",
    "content": "<Note title=\"Important\" type=\"success\">\n  See the [Migration Guides](/en/docs/migration-guides) for the details of breaking changes between versions.\n</Note>\n\n## 3.3.2\n\n**Improvements**\n\n* Bump `sensors_plus` package to `'>=6.1.0 <8.0.0'`.\n\n## 3.3.1\n\n**Improvements**\n\n* Reduce unnecessary animation controllers (multiple `TiltParallax` widgets share the same controller). ([#30](https://github.com/fluttercandies/flutter_tilt/pull/30))\n\n## 3.3.0\n\n**New features**\n\n* By default, add a smooth transition effect when gestures (hover and touch) enter. ([#29](https://github.com/fluttercandies/flutter_tilt/pull/29))\n\n  * Configurable via:\n    * `TiltConfig.enterDuration`\n    * `TiltConfig.moveDuration`\n    * `TiltConfig.enterToMoveDuration`\n    * `TiltConfig.enterToMoveCurve`\n\n  If you prefer to disable this effect:\n\n  ```diff {3}\n  Tilt(\n    tiltConfig: TiltConfig(\n  +   enterToMoveDuration: Duration.zero,\n      ...\n    )\n    ...\n  )\n  ```\n\n## 3.2.3\n\n**Improvements**\n\n* Improve performance (e.g. avoid unnecessary variable assignments, ...). ([#27](https://github.com/fluttercandies/flutter_tilt/pull/27))\n* Refactor code structures. ([#27](https://github.com/fluttercandies/flutter_tilt/pull/27))\n* The `Tilt.fps` default value has been changed from 60 to 120. ([#27](https://github.com/fluttercandies/flutter_tilt/pull/27))\n\n## 3.2.2\n\n**Improvements**\n\n* Update example and docs.\n\n## 3.2.1\n\n**Improvements**\n\n* Bump example to Flutter 3.29 ([#24](https://github.com/fluttercandies/flutter_tilt/pull/24))\n* Refactor code structures. ([#23](https://github.com/fluttercandies/flutter_tilt/pull/23))\n\n## 3.2.0\n\n**New features**\n\n* Add `Tilt.lightShadowMode` and configuration. ([#12](https://github.com/fluttercandies/flutter_tilt/pull/12))\n\n**Improvements**\n\n* Migrate from `withOpacity` to `withAlpha`.\n\n## 3.1.0\n\n**Improvements**\n\n* Bump `sensors_plus` package from `6.0.0` to `6.1.0`. ([#20](https://github.com/fluttercandies/flutter_tilt/pull/20))\n* Migrate the example to Android Studio Ladybug (JDK 21). ([#19](https://github.com/fluttercandies/flutter_tilt/pull/19))\n\n## 3.0.6\n\n**Improvements**\n\n* Replace `Platform` (dart:io) with `TargetPlatform` (flutter/foundation.dart). ([#18](https://github.com/fluttercandies/flutter_tilt/pull/18))\n* Handling when the platform has no available sensors. ([#18](https://github.com/fluttercandies/flutter_tilt/pull/18))\n\n## 3.0.5\n\n**Fixes**\n\n* Fix `Tilt.disable: true` still prevents scrolling. ([#16](https://github.com/fluttercandies/flutter_tilt/pull/16))\n\n## 3.0.4\n\n**Fixes**\n\n* Fix `tiltConfig.enableGestureTouch` still prevents scrolling when disabled. ([#15](https://github.com/fluttercandies/flutter_tilt/pull/15))\n\n**Improvements**\n\n* Improve example (Flutter v3.24.0)\n\n## 3.0.3\n\n**Improvements**\n\n* Bump `sensors_plus` package from `5.0.1` to `6.0.0`.\n\n## 3.0.2\n\n**Improvements**\n\n* Improve linter.\n\n## 3.0.1\n\n**Improvements**\n\n* Upgrade `sensors_plus` package to `5.0.1`.\n* Update Doc.\n\n## 3.0.0\n\n**Breaking changes**\n\n* Bumping Flutter SDK minimum version to `3.19.0`.\n\n**Improvements**\n\n* Upgrade `sensors_plus` package to `5.0.0`.\n\n## 2.4.1\n\n**Improvements**\n\n* dart doc.\n\n## 2.4.0\n\n**New features**\n\n* Add `Tilt.tiltStreamController` to provide custom control of the tilt.\n* Add `TiltConfig.controllerMoveDuration`, `TiltConfig.controllerLeaveDuration`.\n\n**Improvements**\n\n* Improve gesture priority logic.\n* dart doc.\n\n**Fixes**\n\n* Fix assignment usage logic in `Tilt.tiltStreamController`.\n* Fix `Tilt.tiltStreamController` closes prematurely.\n* Fix sensor listening not closed.\n\n## 2.3.0\n\n**Breaking changes**\n\n* Bumping Flutter SDK minimum version to `3.10.0`.\n\n**Improvements**\n\n* Update Versions Compatibility.\n  (Sensors are not supported on the web platform until Flutter version 3.10)\n\n## 2.2.1\n\n**Improvements**\n\n* Upgrade `sensors_plus` to version 4.0.2.\n* Improve code structure.\n\n**Fixes**\n\n* Fix `onGesturesRevert` being called repeatedly after a move has ended.\n\n## 2.2.0\n\n**Breaking changes**\n\n* Migrate to Flutter 3.7 and drop support for previous Flutter versions.\n* Upgrade sensors\\_plus to v4.x.x. (#6)\n\n**Improvements**\n\n* Improve example (Flutter v3.16.0)\n\n## 2.1.2\n\n**Improvements**\n\n* Improve high energy impact.\n\n## 2.1.1\n\n**Improvements**\n\n* Update the example to Flutter 3.16.0 and use Material3.\n\n## 2.1.0\n\n**New features**\n\n* Add spreadFactor to LightConfig.\n\n## 2.0.10\n\n**Fixes**\n\n* Fix undetermined mounted.\n\n## 2.0.9\n\n**Fixes**\n\n* Fix device orientation does not match sensor orientation.\n\n## 2.0.8\n\n**Improvements**\n\n* Improve README docs\n\n## 2.0.7\n\n**Improvements**\n\n* Upgrade `sensors_plus` to version 3.1.0\n\n## 2.0.6\n\n**Improvements**\n\n* Improve light above `childLayout.inner`.\n\n**Fixes**\n\n* Fix incorrect initialization sizes in some cases (e.g. image with unspecified sizes).\n\n## 2.0.5\n\n**Improvements**\n\n* Improve code structure.\n\n## 2.0.4\n\n**Fixes**\n\n* Fix tapping on content causes tilt when `enableRevert` or `enableSensorRevert` is false.\n\n## 2.0.3\n\n**Fixes**\n\n* Fix device landscape mode not match sensor orientation.\n\n## 2.0.2\n\n**Improvements**\n\n* Config copyWith().\n\n## 2.0.1\n\n**Fixes**\n\n* Fix initial has no effect.\n\n## 2.0.0\n\n**Breaking changes**\n\n* Bumping Flutter SDK minimum version to `3.3.0`.\n* Changed `enableMouseHover` in `TiltConfig` to `enableGestureHover`.\n* To keep the tilt, you need to configure `TiltConfig(enableRevert: false, enableSensorRevert: false,)`.\n\n**New features**\n\n* Add sensor gesture (configuration: `enableGestureSensors`, `sensorFactor`, `enableSensorRevert`, `sensorRevertFactor`, `sensorMoveDuration`), default configuration is `TiltConfig(enableGestureSensors = true)`.\n* Add touch gesture configuration, default is `TiltConfig(enableGestureTouch = true)`.\n\n**Improvements**\n\n* Gesture optimization.\n\n## 1.0.4\n\n**Fixes**\n\n* Fix `TiltConfig(enableReverse: true)` is not used in `TiltParallax`.\n* Fix fps timer not canceled.\n\n## 1.0.3\n\n**Improvements**\n\n* Update `FilterQuality` parameter of `Tilt` and `TiltParallax` widgets is `null` by default.\n* Upgrade Example of Flutter to 3.13.0\n\n## 1.0.2\n\n* Doc\n\n## 1.0.1\n\n* Doc\n\n## 1.0.0\n\n**Improvements**\n\n* Test coverage 100%.\n\n## 0.1.2\n\n**Fixes**\n\n* Fix `constraintsPosition` min value is wrong.\n* Fix `TiltParallax` widget not following `Tilt` widget.\n\n## 0.1.1\n\n**Fixes**\n\n* Fix trigger touch and hover at the same time.\n\n## 0.1.0\n\n**Breaking changes**\n\n* The `childInner` parameter of the `Tilt widget` has been changed to `childLayout.outer`.\n\n**New features**\n\n* Add `Tilt` widget `childLayout` parameter with multiple layouts.\n\n## 0.0.9\n\n**New features**\n\n* Add `border` to `Tilt` widget.\n* Add animate `moveDuration`, `leaveDuration`, `moveCurve`, `leaveCurve` to `TiltConfig`.\n\n## 0.0.8\n\n**New features**\n\n* Add `GesturesType` to `onGestureMove` and `onGestureLeave`.\n\n**Improvements**\n\n* Update the trigger of `onGestureLeave` when `TiltConfig.enableRevert = false`.\n* Update `TiltConfig.enableRevert`.\n\n**Fixes**\n\n* Fix `areaProgress` changing after resize.\n\n## 0.0.7\n\n* Docs\n\n## 0.0.6\n\n**Fixes**\n\n* Remove `onTiltBegin`, `onTiltEnd` and add `tiltDataModel` callback values to `onGestureMove`, `onGestureLeave`.\n\n## 0.0.5\n\n**Fixes**\n\n* Fix can't change parameters.\n* Fix `Tilt.childInner` is removed when `Tilt.disable` is used.\n\n## 0.0.3\n\n**Fixes**\n\n* Fix `onGestureLeave` trigger when `TiltConfig.enableMouseHover = false`.\n\n## 0.0.2\n\n**Fixes**\n\n* Fix code for `analysis_options` warnings.\n* Remove `TiltDirection` invalid `topBottom` and `leftRight`.\n\n## 0.0.1\n\n**New features**\n\n* `Tilt` widget supports `onTiltBegin`, `onTiltEnd`, `onGestureMove`, `onGestureLeave`.\n* Upgrade `example` Flutter 3.10.6.\n\n## 0.0.1-dev.1\n\n* Docs\n\n## 0.0.1-dev.0\n\n* Init\n",
    "_searchMeta": {
      "cleanContent": "see the migration guides for the details of breaking changes between versions 3 3 2 improvements bump sensors_plus package to 6 1 0 8 0 0 3 3 1 improvements reduce unnecessary animation controllers multiple tiltparallax widgets share the same controller 30 3 3 0 new features by default add a smooth transition effect when gestures hover and touch enter 29 configurable via: tiltconfig enterduration tiltconfig moveduration tiltconfig entertomoveduration tiltconfig entertomovecurve if you prefer to disable this effect: 3 2 3 improvements improve performance e g avoid unnecessary variable assignments 27 refactor code structures 27 the tilt fps default value has been changed from 60 to 120 27 3 2 2 improvements update example and docs 3 2 1 improvements bump example to flutter 3 29 24 refactor code structures 23 3 2 0 new features add tilt lightshadowmode and configuration 12 improvements migrate from withopacity to withalpha 3 1 0 improvements bump sensorsplus package from 6 0 0 to 6 1 0 20 migrate the example to android studio ladybug jdk 21 19 3 0 6 improvements replace platform dart:io with targetplatform flutter foundation dart 18 handling when the platform has no available sensors 18 3 0 5 fixes fix tilt disable: true still prevents scrolling 16 3 0 4 fixes fix tiltconfig enablegesturetouch still prevents scrolling when disabled 15 improvements improve example flutter v3 24 0 3 0 3 improvements bump sensors_plus package from 5 0 1 to 6 0 0 3 0 2 improvements improve linter 3 0 1 improvements upgrade sensors_plus package to 5 0 1 update doc 3 0 0 breaking changes bumping flutter sdk minimum version to 3 19 0 improvements upgrade sensors_plus package to 5 0 0 2 4 1 improvements dart doc 2 4 0 new features add tilt tiltstreamcontroller to provide custom control of the tilt add tiltconfig controllermoveduration tiltconfig controllerleaveduration improvements improve gesture priority logic dart doc fixes fix assignment usage logic in tilt tiltstreamcontroller fix tilt tiltstreamcontroller closes prematurely fix sensor listening not closed 2 3 0 breaking changes bumping flutter sdk minimum version to 3 10 0 improvements update versions compatibility sensors are not supported on the web platform until flutter version 3 10 2 2 1 improvements upgrade sensors_plus to version 4 0 2 improve code structure fixes fix ongesturesrevert being called repeatedly after a move has ended 2 2 0 breaking changes migrate to flutter 3 7 and drop support for previous flutter versions upgrade sensors _plus to v4 x x 6 improvements improve example flutter v3 16 0 2 1 2 improvements improve high energy impact 2 1 1 improvements update the example to flutter 3 16 0 and use material3 2 1 0 new features add spreadfactor to lightconfig 2 0 10 fixes fix undetermined mounted 2 0 9 fixes fix device orientation does not match sensor orientation 2 0 8 improvements improve readme docs 2 0 7 improvements upgrade sensors_plus to version 3 1 0 2 0 6 improvements improve light above childlayout inner fixes fix incorrect initialization sizes in some cases e g image with unspecified sizes 2 0 5 improvements improve code structure 2 0 4 fixes fix tapping on content causes tilt when enablerevert or enablesensorrevert is false 2 0 3 fixes fix device landscape mode not match sensor orientation 2 0 2 improvements config copywith 2 0 1 fixes fix initial has no effect 2 0 0 breaking changes bumping flutter sdk minimum version to 3 3 0 changed enablemousehover in tiltconfig to enablegesturehover to keep the tilt you need to configure tiltconfig enablerevert: false enablesensorrevert: false new features add sensor gesture configuration: enablegesturesensors sensorfactor enablesensorrevert sensorrevertfactor sensormoveduration default configuration is tiltconfig enablegesturesensors true add touch gesture configuration default is tiltconfig enablegesturetouch true improvements gesture optimization 1 0 4 fixes fix tiltconfig enablereverse: true is not used in tiltparallax fix fps timer not canceled 1 0 3 improvements update filterquality parameter of tilt and tiltparallax widgets is null by default upgrade example of flutter to 3 13 0 1 0 2 doc 1 0 1 doc 1 0 0 improvements test coverage 100 0 1 2 fixes fix constraintsposition min value is wrong fix tiltparallax widget not following tilt widget 0 1 1 fixes fix trigger touch and hover at the same time 0 1 0 breaking changes the childinner parameter of the tilt widget has been changed to childlayout outer new features add tilt widget childlayout parameter with multiple layouts 0 0 9 new features add border to tilt widget add animate moveduration leaveduration movecurve leavecurve to tiltconfig 0 0 8 new features add gesturestype to ongesturemove and ongestureleave improvements update the trigger of ongestureleave when tiltconfig enablerevert false update tiltconfig enablerevert fixes fix areaprogress changing after resize 0 0 7 docs 0 0 6 fixes remove ontiltbegin ontiltend and add tiltdatamodel callback values to ongesturemove ongestureleave 0 0 5 fixes fix can t change parameters fix tilt childinner is removed when tilt disable is used 0 0 3 fixes fix ongestureleave trigger when tiltconfig enablemousehover false 0 0 2 fixes fix code for analysis_options warnings remove tiltdirection invalid topbottom and leftright 0 0 1 new features tilt widget supports ontiltbegin ontiltend ongesturemove ongestureleave upgrade example flutter 3 10 6 0 0 1-dev 1 docs 0 0 1-dev 0 init",
      "headings": [
        "3.3.2",
        "3.3.1",
        "3.3.0",
        "3.2.3",
        "3.2.2",
        "3.2.1",
        "3.2.0",
        "3.1.0",
        "3.0.6",
        "3.0.5",
        "3.0.4",
        "3.0.3",
        "3.0.2",
        "3.0.1",
        "3.0.0",
        "2.4.1",
        "2.4.0",
        "2.3.0",
        "2.2.1",
        "2.2.0",
        "2.1.2",
        "2.1.1",
        "2.1.0",
        "2.0.10",
        "2.0.9",
        "2.0.8",
        "2.0.7",
        "2.0.6",
        "2.0.5",
        "2.0.4",
        "2.0.3",
        "2.0.2",
        "2.0.1",
        "2.0.0",
        "1.0.4",
        "1.0.3",
        "1.0.2",
        "1.0.1",
        "1.0.0",
        "0.1.2",
        "0.1.1",
        "0.1.0",
        "0.0.9",
        "0.0.8",
        "0.0.7",
        "0.0.6",
        "0.0.5",
        "0.0.3",
        "0.0.2",
        "0.0.1",
        "0.0.1-dev.1",
        "0.0.1-dev.0"
      ],
      "keywords": [
        "changelog",
        "3.3.2",
        "3.3.1",
        "3.3.0",
        "3.2.3",
        "3.2.2",
        "3.2.1",
        "3.2.0",
        "3.1.0",
        "3.0.6",
        "3.0.5",
        "3.0.4",
        "3.0.3",
        "3.0.2",
        "3.0.1",
        "3.0.0",
        "2.4.1",
        "2.4.0",
        "2.3.0",
        "2.2.1",
        "2.2.0",
        "2.1.2",
        "2.1.1",
        "2.1.0",
        "2.0.10",
        "2.0.9",
        "2.0.8",
        "2.0.7",
        "2.0.6",
        "2.0.5",
        "2.0.4",
        "2.0.3",
        "2.0.2",
        "2.0.1",
        "2.0.0",
        "1.0.4",
        "1.0.3",
        "1.0.2",
        "1.0.1",
        "1.0.0",
        "0.1.2",
        "0.1.1",
        "0.1.0",
        "0.0.9",
        "0.0.8",
        "0.0.7",
        "0.0.6",
        "0.0.5",
        "0.0.3",
        "0.0.2",
        "0.0.1",
        "0.0.1-dev.1",
        "0.0.1-dev.0",
        "Improvements",
        "New features",
        "Fixes",
        "Breaking changes",
        "sensors_plus",
        "'>=6.1.0 <8.0.0'",
        "TiltParallax",
        "TiltConfig.enterDuration",
        "TiltConfig.moveDuration",
        "TiltConfig.enterToMoveDuration",
        "TiltConfig.enterToMoveCurve",
        "diff {3}\n  Tilt(\n    tiltConfig: TiltConfig(\n  +   enterToMoveDuration: Duration.zero,\n      ...\n    )\n    ...\n  )",
        "## 3.2.3\n\n**Improvements**\n\n* Improve performance (e.g. avoid unnecessary variable assignments, ...). ([#27](https://github.com/fluttercandies/flutter_tilt/pull/27))\n* Refactor code structures. ([#27](https://github.com/fluttercandies/flutter_tilt/pull/27))\n* The",
        "default value has been changed from 60 to 120. ([#27](https://github.com/fluttercandies/flutter_tilt/pull/27))\n\n## 3.2.2\n\n**Improvements**\n\n* Update example and docs.\n\n## 3.2.1\n\n**Improvements**\n\n* Bump example to Flutter 3.29 ([#24](https://github.com/fluttercandies/flutter_tilt/pull/24))\n* Refactor code structures. ([#23](https://github.com/fluttercandies/flutter_tilt/pull/23))\n\n## 3.2.0\n\n**New features**\n\n* Add",
        "and configuration. ([#12](https://github.com/fluttercandies/flutter_tilt/pull/12))\n\n**Improvements**\n\n* Migrate from",
        "to",
        ".\n\n## 3.1.0\n\n**Improvements**\n\n* Bump",
        "package from",
        ". ([#20](https://github.com/fluttercandies/flutter_tilt/pull/20))\n* Migrate the example to Android Studio Ladybug (JDK 21). ([#19](https://github.com/fluttercandies/flutter_tilt/pull/19))\n\n## 3.0.6\n\n**Improvements**\n\n* Replace",
        "(dart:io) with",
        "(flutter/foundation.dart). ([#18](https://github.com/fluttercandies/flutter_tilt/pull/18))\n* Handling when the platform has no available sensors. ([#18](https://github.com/fluttercandies/flutter_tilt/pull/18))\n\n## 3.0.5\n\n**Fixes**\n\n* Fix",
        "still prevents scrolling. ([#16](https://github.com/fluttercandies/flutter_tilt/pull/16))\n\n## 3.0.4\n\n**Fixes**\n\n* Fix",
        "still prevents scrolling when disabled. ([#15](https://github.com/fluttercandies/flutter_tilt/pull/15))\n\n**Improvements**\n\n* Improve example (Flutter v3.24.0)\n\n## 3.0.3\n\n**Improvements**\n\n* Bump",
        ".\n\n## 3.0.2\n\n**Improvements**\n\n* Improve linter.\n\n## 3.0.1\n\n**Improvements**\n\n* Upgrade",
        "package to",
        ".\n* Update Doc.\n\n## 3.0.0\n\n**Breaking changes**\n\n* Bumping Flutter SDK minimum version to",
        ".\n\n**Improvements**\n\n* Upgrade",
        ".\n\n## 2.4.1\n\n**Improvements**\n\n* dart doc.\n\n## 2.4.0\n\n**New features**\n\n* Add",
        "to provide custom control of the tilt.\n* Add",
        ",",
        ".\n\n**Improvements**\n\n* Improve gesture priority logic.\n* dart doc.\n\n**Fixes**\n\n* Fix assignment usage logic in",
        ".\n* Fix",
        "closes prematurely.\n* Fix sensor listening not closed.\n\n## 2.3.0\n\n**Breaking changes**\n\n* Bumping Flutter SDK minimum version to",
        ".\n\n**Improvements**\n\n* Update Versions Compatibility.\n  (Sensors are not supported on the web platform until Flutter version 3.10)\n\n## 2.2.1\n\n**Improvements**\n\n* Upgrade",
        "to version 4.0.2.\n* Improve code structure.\n\n**Fixes**\n\n* Fix",
        "being called repeatedly after a move has ended.\n\n## 2.2.0\n\n**Breaking changes**\n\n* Migrate to Flutter 3.7 and drop support for previous Flutter versions.\n* Upgrade sensors\\_plus to v4.x.x. (#6)\n\n**Improvements**\n\n* Improve example (Flutter v3.16.0)\n\n## 2.1.2\n\n**Improvements**\n\n* Improve high energy impact.\n\n## 2.1.1\n\n**Improvements**\n\n* Update the example to Flutter 3.16.0 and use Material3.\n\n## 2.1.0\n\n**New features**\n\n* Add spreadFactor to LightConfig.\n\n## 2.0.10\n\n**Fixes**\n\n* Fix undetermined mounted.\n\n## 2.0.9\n\n**Fixes**\n\n* Fix device orientation does not match sensor orientation.\n\n## 2.0.8\n\n**Improvements**\n\n* Improve README docs\n\n## 2.0.7\n\n**Improvements**\n\n* Upgrade",
        "to version 3.1.0\n\n## 2.0.6\n\n**Improvements**\n\n* Improve light above",
        ".\n\n**Fixes**\n\n* Fix incorrect initialization sizes in some cases (e.g. image with unspecified sizes).\n\n## 2.0.5\n\n**Improvements**\n\n* Improve code structure.\n\n## 2.0.4\n\n**Fixes**\n\n* Fix tapping on content causes tilt when",
        "or",
        "is false.\n\n## 2.0.3\n\n**Fixes**\n\n* Fix device landscape mode not match sensor orientation.\n\n## 2.0.2\n\n**Improvements**\n\n* Config copyWith().\n\n## 2.0.1\n\n**Fixes**\n\n* Fix initial has no effect.\n\n## 2.0.0\n\n**Breaking changes**\n\n* Bumping Flutter SDK minimum version to",
        ".\n* Changed",
        "in",
        ".\n* To keep the tilt, you need to configure",
        ".\n\n**New features**\n\n* Add sensor gesture (configuration:",
        "), default configuration is",
        ".\n* Add touch gesture configuration, default is",
        ".\n\n**Improvements**\n\n* Gesture optimization.\n\n## 1.0.4\n\n**Fixes**\n\n* Fix",
        "is not used in",
        ".\n* Fix fps timer not canceled.\n\n## 1.0.3\n\n**Improvements**\n\n* Update",
        "parameter of",
        "and",
        "widgets is",
        "by default.\n* Upgrade Example of Flutter to 3.13.0\n\n## 1.0.2\n\n* Doc\n\n## 1.0.1\n\n* Doc\n\n## 1.0.0\n\n**Improvements**\n\n* Test coverage 100%.\n\n## 0.1.2\n\n**Fixes**\n\n* Fix",
        "min value is wrong.\n* Fix",
        "widget not following",
        "widget.\n\n## 0.1.1\n\n**Fixes**\n\n* Fix trigger touch and hover at the same time.\n\n## 0.1.0\n\n**Breaking changes**\n\n* The",
        "parameter of the",
        "has been changed to",
        ".\n\n**New features**\n\n* Add",
        "widget",
        "parameter with multiple layouts.\n\n## 0.0.9\n\n**New features**\n\n* Add",
        "widget.\n* Add animate",
        ".\n\n## 0.0.8\n\n**New features**\n\n* Add",
        ".\n\n**Improvements**\n\n* Update the trigger of",
        "when",
        ".\n* Update",
        ".\n\n**Fixes**\n\n* Fix",
        "changing after resize.\n\n## 0.0.7\n\n* Docs\n\n## 0.0.6\n\n**Fixes**\n\n* Remove",
        "and add",
        "callback values to",
        ".\n\n## 0.0.5\n\n**Fixes**\n\n* Fix can't change parameters.\n* Fix",
        "is removed when",
        "is used.\n\n## 0.0.3\n\n**Fixes**\n\n* Fix",
        "trigger when",
        ".\n\n## 0.0.2\n\n**Fixes**\n\n* Fix code for",
        "warnings.\n* Remove",
        "invalid",
        ".\n\n## 0.0.1\n\n**New features**\n\n*",
        "widget supports",
        ".\n* Upgrade"
      ]
    }
  },
  {
    "slug": "/examples/animation-demo",
    "title": "Animation",
    "description": "",
    "content": "",
    "_searchMeta": {
      "cleanContent": "",
      "headings": [],
      "keywords": [
        "examples",
        "Animation"
      ]
    }
  },
  {
    "slug": "/examples/bento-grids",
    "title": "Bento Grids",
    "description": "",
    "content": "",
    "_searchMeta": {
      "cleanContent": "",
      "headings": [],
      "keywords": [
        "examples",
        "Bento Grids"
      ]
    }
  },
  {
    "slug": "/examples/default",
    "title": "Default",
    "description": "",
    "content": "",
    "_searchMeta": {
      "cleanContent": "",
      "headings": [],
      "keywords": [
        "examples",
        "Default"
      ]
    }
  },
  {
    "slug": "/examples/demo",
    "title": "Demo",
    "description": "",
    "content": "",
    "_searchMeta": {
      "cleanContent": "",
      "headings": [],
      "keywords": [
        "examples",
        "Demo"
      ]
    }
  },
  {
    "slug": "/examples/dialog",
    "title": "Dialog",
    "description": "",
    "content": "",
    "_searchMeta": {
      "cleanContent": "",
      "headings": [],
      "keywords": [
        "examples",
        "Dialog"
      ]
    }
  },
  {
    "slug": "/examples/disable-effects",
    "title": "Disable Effects",
    "description": "",
    "content": "",
    "_searchMeta": {
      "cleanContent": "",
      "headings": [],
      "keywords": [
        "examples",
        "Disable Effects"
      ]
    }
  },
  {
    "slug": "/examples/events",
    "title": "Events",
    "description": "",
    "content": "",
    "_searchMeta": {
      "cleanContent": "",
      "headings": [],
      "keywords": [
        "examples",
        "Events"
      ]
    }
  },
  {
    "slug": "/examples",
    "title": "Examples",
    "description": "Explore examples with source code.",
    "content": "You can preview all Flutter examples in a new tab:\n\nOr preview all examples on this page:\n",
    "_searchMeta": {
      "cleanContent": "you can preview all flutter examples in a new tab: or preview all examples on this page:",
      "headings": [],
      "keywords": [
        "examples"
      ]
    }
  },
  {
    "slug": "/examples/initial-tilt",
    "title": "Initial Tilt",
    "description": "",
    "content": "",
    "_searchMeta": {
      "cleanContent": "",
      "headings": [],
      "keywords": [
        "examples",
        "Initial Tilt"
      ]
    }
  },
  {
    "slug": "/examples/keep-tilt",
    "title": "Keep Tilt",
    "description": "",
    "content": "",
    "_searchMeta": {
      "cleanContent": "",
      "headings": [],
      "keywords": [
        "examples",
        "Keep Tilt"
      ]
    }
  },
  {
    "slug": "/examples/layout-demo",
    "title": "Layout",
    "description": "",
    "content": "",
    "_searchMeta": {
      "cleanContent": "",
      "headings": [],
      "keywords": [
        "examples",
        "Layout"
      ]
    }
  },
  {
    "slug": "/examples/layout2-demo",
    "title": "Layout2",
    "description": "",
    "content": "",
    "_searchMeta": {
      "cleanContent": "",
      "headings": [],
      "keywords": [
        "examples",
        "Layout2"
      ]
    }
  },
  {
    "slug": "/examples/layout3-demo",
    "title": "Layout3",
    "description": "",
    "content": "",
    "_searchMeta": {
      "cleanContent": "",
      "headings": [],
      "keywords": [
        "examples",
        "Layout3"
      ]
    }
  },
  {
    "slug": "/examples/light-direction-demo",
    "title": "Light Direction",
    "description": "",
    "content": "",
    "_searchMeta": {
      "cleanContent": "",
      "headings": [],
      "keywords": [
        "examples",
        "Light Direction"
      ]
    }
  },
  {
    "slug": "/examples/multiple-tilt",
    "title": "Multiple Tilt",
    "description": "",
    "content": "",
    "_searchMeta": {
      "cleanContent": "",
      "headings": [],
      "keywords": [
        "examples",
        "Multiple Tilt"
      ]
    }
  },
  {
    "slug": "/examples/parallax-card",
    "title": "Parallax Card",
    "description": "",
    "content": "",
    "_searchMeta": {
      "cleanContent": "",
      "headings": [],
      "keywords": [
        "examples",
        "Parallax Card"
      ]
    }
  },
  {
    "slug": "/examples/parallax-image",
    "title": "Parallax Image",
    "description": "",
    "content": "",
    "_searchMeta": {
      "cleanContent": "",
      "headings": [],
      "keywords": [
        "examples",
        "Parallax Image"
      ]
    }
  },
  {
    "slug": "/examples/reverse-tilt",
    "title": "Reverse Tilt",
    "description": "",
    "content": "",
    "_searchMeta": {
      "cleanContent": "",
      "headings": [],
      "keywords": [
        "examples",
        "Reverse Tilt"
      ]
    }
  },
  {
    "slug": "/examples/shadow-direction-demo",
    "title": "Shadow Direction",
    "description": "",
    "content": "",
    "_searchMeta": {
      "cleanContent": "",
      "headings": [],
      "keywords": [
        "examples",
        "Shadow Direction"
      ]
    }
  },
  {
    "slug": "/examples/smooth-gesture-enter-demo",
    "title": "Smooth Gesture Enter",
    "description": "",
    "content": "",
    "_searchMeta": {
      "cleanContent": "",
      "headings": [],
      "keywords": [
        "examples",
        "Smooth Gesture Enter"
      ]
    }
  },
  {
    "slug": "/examples/tilt-direction-demo",
    "title": "Tilt Direction",
    "description": "",
    "content": "",
    "_searchMeta": {
      "cleanContent": "",
      "headings": [],
      "keywords": [
        "examples",
        "Tilt Direction"
      ]
    }
  },
  {
    "slug": "/examples/tilt-lightshadowmode",
    "title": "Tilt-LightShadowMode",
    "description": "",
    "content": "",
    "_searchMeta": {
      "cleanContent": "",
      "headings": [],
      "keywords": [
        "examples",
        "Tilt-LightShadowMode"
      ]
    }
  },
  {
    "slug": "/examples/tilt-stream-controller-demo",
    "title": "TiltStreamController",
    "description": "",
    "content": "",
    "_searchMeta": {
      "cleanContent": "",
      "headings": [],
      "keywords": [
        "examples",
        "TiltStreamController"
      ]
    }
  },
  {
    "slug": "/guides/faq/how-to-disable-sensors",
    "title": "How to disable sensors",
    "description": "",
    "content": "You can use the following code:\n\n```diff {5} showLineNumbers\n...\n\nTilt(\n  tiltConfig: const TiltConfig(\n+   enableGestureSensors: false,\n    ...\n  ),\n  ...\n),\n\n...\n```\n",
    "_searchMeta": {
      "cleanContent": "you can use the following code:",
      "headings": [],
      "keywords": [
        "guide",
        "faq",
        "sensors",
        "diff {5} showLineNumbers\n...\n\nTilt(\n  tiltConfig: const TiltConfig(\n+   enableGestureSensors: false,\n    ...\n  ),\n  ...\n),\n\n..."
      ]
    }
  },
  {
    "slug": "/guides/faq/how-to-make-the-shadow-match-the-content",
    "title": "How to make the shadow match the content",
    "description": "",
    "content": "You can use the following code:\n\n```diff {4} showLineNumbers\n...\n\nTilt(\n+ lightShadowMode: LightShadowMode.projector,\n  ...\n),\n\n...\n```\n\nFor more information, see: [Tilt widget - LightShadowMode][].\n\nYou should assess the performance risks yourself.\nIf your scenario runs smoothly, then you can use it.\n\n<Note type=\"warning\" title=\"Performance risk exists\">\n  Apply a shadow to the entire `Tilt` widget, similar to a projector effect.\\\n  will display a shadow that exactly matches the non-transparent parts of the widget.\\\n  Recommended for the following scenarios:\n\n  * Images only\n  * No data states\n  * No Hero tags\n</Note>\n\n[Tilt widget - LightShadowMode]: /en/docs/widgets/tilt-widget/#lightshadowmode\n",
    "_searchMeta": {
      "cleanContent": "you can use the following code: for more information see: tilt widget - lightshadowmode you should assess the performance risks yourself if your scenario runs smoothly then you can use it apply a shadow to the entire tilt widget similar to a projector effect will display a shadow that exactly matches the non-transparent parts of the widget recommended for the following scenarios: images only no data states no hero tags tilt widget - lightshadowmode : en docs widgets tilt-widget lightshadowmode",
      "headings": [],
      "keywords": [
        "guide",
        "faq",
        "shadow",
        "diff {4} showLineNumbers\n...\n\nTilt(\n+ lightShadowMode: LightShadowMode.projector,\n  ...\n),\n\n...",
        "For more information, see: [Tilt widget - LightShadowMode][].\n\nYou should assess the performance risks yourself.\nIf your scenario runs smoothly, then you can use it.\n\n<Note type=\"warning\" title=\"Performance risk exists\">\n  Apply a shadow to the entire"
      ]
    }
  },
  {
    "slug": "/guides/faq",
    "title": "FAQ",
    "description": "You might find the answer here.",
    "content": "",
    "_searchMeta": {
      "cleanContent": "",
      "headings": [],
      "keywords": [
        "guide",
        "faq"
      ]
    }
  },
  {
    "slug": "/guides/faq/keep-the-tilt-angle",
    "title": "Keep the tilt angle",
    "description": "",
    "content": "You can use the following code:\n\n```diff {5-6} showLineNumbers\n...\n\nTilt(\n  tiltConfig: const TiltConfig(\n+   enableRevert: false,\n+   enableSensorRevert: false,\n    ...\n  ),\n  ...\n),\n\n...\n```\n",
    "_searchMeta": {
      "cleanContent": "you can use the following code:",
      "headings": [],
      "keywords": [
        "guide",
        "faq",
        "keep",
        "diff {5-6} showLineNumbers\n...\n\nTilt(\n  tiltConfig: const TiltConfig(\n+   enableRevert: false,\n+   enableSensorRevert: false,\n    ...\n  ),\n  ...\n),\n\n..."
      ]
    }
  },
  {
    "slug": "/guides/faq/sensors-are-inactive-on-the-web",
    "title": "Sensors are inactive on the web",
    "description": "",
    "content": "You need to check the following:\n\n### Browser compatibility\n\nCurrently Web uses the [Sensor API - Gyroscope],\nbut it is not compatible with some of the major browsers, such as Safari, Firefox.\n\nFor more information, see [Browser compatibility][Gyroscope browser compatibility].\n\n### Secure contexts\n\nYou should consider using `HTTPS`,\nbrowsers can only use sensors in secure contexts ([relevant limitations][Secure contexts relevant limitations]).\n\nYou can refer to [issue 22][] to enable it, or enable it yourself using other methods.\n\n[Gyroscope browser compatibility]: https://developer.mozilla.org/en-US/docs/Web/API/Sensor_APIs#browser_compatibility\n\n[Sensor API - Gyroscope]: https://developer.mozilla.org/en-US/docs/Web/API/Gyroscope\n\n[Secure contexts relevant limitations]: https://developer.mozilla.org/en-US/docs/Web/API/Gyroscope#:~:text=Secure%20context%3A%20This%20feature%20is%20available%20only%20in%20secure%20contexts%20\\(HTTPS\\)%2C%20in%20some%20or%20all%20supporting%20browsers.\n\n[issue 22]: https://github.com/fluttercandies/flutter_tilt/issues/22#issuecomment-2713822610\n",
    "_searchMeta": {
      "cleanContent": "you need to check the following: browser compatibility currently web uses the sensor api - gyroscope but it is not compatible with some of the major browsers such as safari firefox for more information see browser compatibility gyroscope browser compatibility secure contexts you should consider using https browsers can only use sensors in secure contexts relevant limitations secure contexts relevant limitations you can refer to issue 22 to enable it or enable it yourself using other methods gyroscope browser compatibility : https: developer mozilla org en-us docs web api sensorapis browsercompatibility sensor api - gyroscope : https: developer mozilla org en-us docs web api gyroscope secure contexts relevant limitations : https: developer mozilla org en-us docs web api gyroscope : :text secure 20context 3a 20this 20feature 20is 20available 20only 20in 20secure 20contexts 20 https 2c 20in 20some 20or 20all 20supporting 20browsers issue 22 : https: github com fluttercandies flutter_tilt issues 22 issuecomment-2713822610",
      "headings": [],
      "keywords": [
        "guide",
        "faq",
        "sensors",
        "HTTPS"
      ]
    }
  },
  {
    "slug": "/guides",
    "title": "Guides",
    "description": "",
    "content": "",
    "_searchMeta": {
      "cleanContent": "",
      "headings": [],
      "keywords": [
        "guide"
      ]
    }
  },
  {
    "slug": "/guides/simple-usage",
    "title": "Simple usage",
    "description": "Simple examples to help you get started quickly.",
    "content": "## Tilt\n\n[Tilt widget][Tilt widget parameters] will have default tilt, shadow, and light effects.\n\n```dart {6} showLineNumbers\n/// Import flutter_tilt\nimport 'package:flutter_tilt/flutter_tilt.dart';\n\n...\n\nTilt(\n  child: Container(\n    width: 150.0,\n    height: 300.0,\n    color: Colors.grey,\n  ),\n),\n\n...\n\n```\n\n## Parallax\n\n[TiltParallax widget][TiltParallax widget parameters] can only be used in the `childLayout` of `Tilt` widget.\n\n```dart {6,7,11,19} showLineNumbers\n/// Import flutter_tilt\nimport 'package:flutter_tilt/flutter_tilt.dart';\n\n...\n\nTilt(\n  childLayout: const ChildLayout(\n    outer: [\n      /// Parallax here\n      Positioned(\n        child: TiltParallax(\n          child: Text('Parallax'),\n        ),\n      ),\n      /// Parallax here\n      Positioned(\n        top: 20.0,\n        left: 20.0,\n        child: TiltParallax(\n          size: Offset(-10.0, -10.0),\n          child: Text('Tilt'),\n        ),\n      ),\n    ],\n  ),\n  child: Container(\n    width: 150.0,\n    height: 300.0,\n    color: Colors.brown,\n  ),\n),\n\n...\n\n```\n\n## More parameters\n\n[Tilt widget parameters]: /en/docs/widgets/tilt-widget\n\n[TiltParallax widget parameters]: /en/docs/widgets/tiltparallax-widget\n",
    "_searchMeta": {
      "cleanContent": "tilt tilt widget tilt widget parameters will have default tilt shadow and light effects parallax tiltparallax widget tiltparallax widget parameters can only be used in the childlayout of tilt widget more parameters tilt widget parameters : en docs widgets tilt-widget tiltparallax widget parameters : en docs widgets tiltparallax-widget",
      "headings": [
        "Tilt",
        "Parallax",
        "More parameters"
      ],
      "keywords": [
        "guide",
        "simple usage",
        "Tilt",
        "Parallax",
        "More parameters",
        "dart {6} showLineNumbers\n/// Import flutter_tilt\nimport 'package:flutter_tilt/flutter_tilt.dart';\n\n...\n\nTilt(\n  child: Container(\n    width: 150.0,\n    height: 300.0,\n    color: Colors.grey,\n  ),\n),\n\n...",
        "## Parallax\n\n[TiltParallax widget][TiltParallax widget parameters] can only be used in the",
        "of",
        "widget.",
        "dart {6,7,11,19} showLineNumbers\n/// Import flutter_tilt\nimport 'package:flutter_tilt/flutter_tilt.dart';\n\n...\n\nTilt(\n  childLayout: const ChildLayout(\n    outer: [\n      /// Parallax here\n      Positioned(\n        child: TiltParallax(\n          child: Text('Parallax'),\n        ),\n      ),\n      /// Parallax here\n      Positioned(\n        top: 20.0,\n        left: 20.0,\n        child: TiltParallax(\n          size: Offset(-10.0, -10.0),\n          child: Text('Tilt'),\n        ),\n      ),\n    ],\n  ),\n  child: Container(\n    width: 150.0,\n    height: 300.0,\n    color: Colors.brown,\n  ),\n),\n\n..."
      ]
    }
  },
  {
    "slug": "/guides/tilt-with-controller",
    "title": "Tilt with controller",
    "description": "Use the controller to tilt the widget",
    "content": "If you want to control the tilt programmatically, you can see the following:\n\n## Configure Tilt.tiltStreamController\n\n```dart {3,8} showLineNumbers\n...\n\nfinal tiltStreamController = StreamController<TiltStreamModel>.broadcast();\n\n...\n\nTilt(\n  tiltStreamController: tiltStreamController,\n  ...\n),\n\n...\n```\n\n## Using the controller\n\nThe current gesture is being used:\n\n`TiltStreamModel.position` is the current trigger position, It will have the tilt effect of the corresponding position.\n\nFor example:\\\nThere is a widget size, width: 10, height: 10,\n\n* Offset(0, 0): Maximum tilt top left.\n* Offset(10, 10): Maximum tilt bottom right.\n\n```dart showLineNumbers\ntiltStreamController.add(\n  TiltStreamModel(\n    position: Offset(xx, xx),\n  ),\n);\n```\n\nTo stop using the current gesture:\n\nBy default, `TiltStreamModel` uses the `GesturesType.controller` gesture type.\\\n`TiltStreamModel.gestureUse` is used to determine if the gesture is being used and will be processed according to the [gesture priority][].\n\n```dart showLineNumbers\ntiltStreamController.add(\n  TiltStreamModel(\n    position: Offset(xx, xx),\n    gestureUse: false,\n  ),\n);\n```\n\n## More\n\nYou can also see an example: [Example - TiltStreamController][].\\\nFor more information, see: [Tilt widget - StreamController\\<TiltStreamModel>][Tilt widget - StreamController<TiltStreamModel>].\n\n[gesture priority]: /en/docs/widgets/tilt-widget/#gesture-priority\n\n[Example - TiltStreamController]: /en/docs/examples/tilt-stream-controller-demo\n\n[Tilt widget - StreamController<TiltStreamModel>]: /en/docs/widgets/tilt-widget/#streamcontrollertiltstreammodel\n",
    "_searchMeta": {
      "cleanContent": "if you want to control the tilt programmatically you can see the following: configure tilt tiltstreamcontroller using the controller the current gesture is being used: tiltstreammodel position is the current trigger position it will have the tilt effect of the corresponding position for example: there is a widget size width: 10 height: 10 offset 0 0 : maximum tilt top left offset 10 10 : maximum tilt bottom right to stop using the current gesture: by default tiltstreammodel uses the gesturestype controller gesture type tiltstreammodel gestureuse is used to determine if the gesture is being used and will be processed according to the gesture priority more you can also see an example: example - tiltstreamcontroller for more information see: tilt widget - streamcontroller tiltstreammodel tilt widget - streamcontroller tiltstreammodel gesture priority : en docs widgets tilt-widget gesture-priority example - tiltstreamcontroller : en docs examples tilt-stream-controller-demo tilt widget - streamcontroller tiltstreammodel : en docs widgets tilt-widget streamcontrollertiltstreammodel",
      "headings": [
        "Configure Tilt.tiltStreamController",
        "Using the controller",
        "More"
      ],
      "keywords": [
        "guide",
        "controller",
        "Configure Tilt.tiltStreamController",
        "Using the controller",
        "More",
        "dart {3,8} showLineNumbers\n...\n\nfinal tiltStreamController = StreamController<TiltStreamModel>.broadcast();\n\n...\n\nTilt(\n  tiltStreamController: tiltStreamController,\n  ...\n),\n\n...",
        "## Using the controller\n\nThe current gesture is being used:",
        "is the current trigger position, It will have the tilt effect of the corresponding position.\n\nFor example:\\\nThere is a widget size, width: 10, height: 10,\n\n* Offset(0, 0): Maximum tilt top left.\n* Offset(10, 10): Maximum tilt bottom right.",
        "dart showLineNumbers\ntiltStreamController.add(\n  TiltStreamModel(\n    position: Offset(xx, xx),\n  ),\n);",
        "To stop using the current gesture:\n\nBy default,",
        "uses the",
        "gesture type.\\",
        "is used to determine if the gesture is being used and will be processed according to the [gesture priority][].",
        "dart showLineNumbers\ntiltStreamController.add(\n  TiltStreamModel(\n    position: Offset(xx, xx),\n    gestureUse: false,\n  ),\n);"
      ]
    }
  },
  {
    "slug": "/installation",
    "title": "Installation",
    "description": "This guide covers compatibility notes and how to add the flutter_tilt package.",
    "content": "## Installation\n\n<Step>\n  <StepItem title=\"Compatibility\">\n    #### Platforms compatibility\n\n    <div className=\"max-w-xl\">\n      | Android | iOS   | Web   | macOS | Windows | Linux |\n      | :-----: | :---: | :---: | :---: | :-----: | :---: |\n      | ✅      | ✅   | ✅    | ✅   | ✅     | ✅    |\n    </div>\n\n    #### Sensors compatibility\n\n    Sensors are only available on these platforms.\\\n    Platforms without sensors support do not affect the normal use of other features.\n\n    <div className=\"max-w-xl\">\n      | Android | iOS   | Web (HTTPS)                                              | macOS | Windows | Linux |\n      | :-----: | :---: | :------------------------------------------------------: | :---: | :-----: | :---: |\n      | ✅      | ✅   | [Browser compatibility][Gyroscope Browser compatibility] | ❌    | ❌     | ❌    |\n    </div>\n\n    <br />\n\n    <Note title=\"Note\">\n      Currently Web uses the [Sensor API - Gyroscope], but it is not compatible with\n      some of the major browsers, such as Safari, Firefox.\n    </Note>\n\n    [Gyroscope Browser compatibility]: https://developer.mozilla.org/en-US/docs/Web/API/Sensor_APIs#browser_compatibility\n\n    [Sensor API - Gyroscope]: https://developer.mozilla.org/en-US/docs/Web/API/Gyroscope\n  </StepItem>\n\n  <StepItem title=\"Add flutter_tilt\">\n    #### Versions compatibility\n\n    <div className=\"max-w-xl\">\n      | Package              | Flutter<br />v3.0.0+ | Flutter<br />v3.10.0+ | Flutter<br />v3.19.0+ |\n      | -------------------- | :------------------: | :-------------------: | :-------------------: |\n      | flutter\\_tilt v3.0.0+ | ❌ | ❌ | ✅ |\n      | flutter\\_tilt v2.0.0+ | ❌ | ✅ | ✅ |\n      | flutter\\_tilt v1.0.0+ | ✅ | ❌ | ❌ |\n    </div>\n\n    #### Add flutter\\_tilt\n\n    Run this command with Flutter,\n\n    ```bash\n    $ flutter pub add flutter_tilt\n    ```\n\n    or add `flutter_tilt` to `pubspec.yaml` dependencies manually.\n\n    ```yaml:pubspec.yaml {3} showLineNumbers\n    ...\n    dependencies:\n      flutter_tilt: latest_version\n    ...\n    ```\n  </StepItem>\n\n  <StepItem title=\"Import flutter_tilt\">\n    Now in your Dart code, you can use:\n\n    ```dart\n    import 'package:flutter_tilt/flutter_tilt.dart';\n    ```\n  </StepItem>\n\n  <StepItem title=\"Get started\" />\n</Step>\n",
    "_searchMeta": {
      "cleanContent": "installation stepitem title compatibility platforms compatibility div classname max-w-xl android ios web macos windows linux :-----: :---: :---: :---: :-----: :---: div sensors compatibility sensors are only available on these platforms platforms without sensors support do not affect the normal use of other features div classname max-w-xl android ios web https macos windows linux :-----: :---: :------------------------------------------------------: :---: :-----: :---: browser compatibility gyroscope browser compatibility div br note title note currently web uses the sensor api - gyroscope but it is not compatible with some of the major browsers such as safari firefox gyroscope browser compatibility : https: developer mozilla org en-us docs web api sensorapis browsercompatibility sensor api - gyroscope : https: developer mozilla org en-us docs web api gyroscope stepitem versions compatibility div classname max-w-xl package flutter br v3 0 0 flutter br v3 10 0 flutter br v3 19 0 -------------------- :------------------: :-------------------: :-------------------: flutter _tilt v3 0 0 flutter _tilt v2 0 0 flutter _tilt v1 0 0 div add flutter _tilt run this command with flutter or add flutter_tilt to pubspec yaml dependencies manually stepitem stepitem title import flutter_tilt now in your dart code you can use: stepitem stepitem title get started",
      "headings": [
        "Installation"
      ],
      "keywords": [
        "installation",
        "compatibility",
        "package",
        "Installation",
        "bash\n    $ flutter pub add flutter_tilt",
        "or add",
        "to",
        "dependencies manually.",
        "yaml:pubspec.yaml {3} showLineNumbers\n    ...\n    dependencies:\n      flutter_tilt: latest_version\n    ...",
        "</StepItem>\n\n  <StepItem title=\"Import flutter_tilt\">\n    Now in your Dart code, you can use:",
        "dart\n    import 'package:flutter_tilt/flutter_tilt.dart';"
      ]
    }
  },
  {
    "slug": "/migration-guides",
    "title": "Migration Guide",
    "description": "This document gathers all breaking changes between major versions.",
    "content": "* [Migrate to v2.0.0](/en/docs/migration-guides/migrate-to-v2-0-0/)\n* [Migrate to v0.1.0](/en/docs/migration-guides/migrate-to-v0-1-0/)\n",
    "_searchMeta": {
      "cleanContent": "migrate to v2 0 0 migrate to v0 1 0",
      "headings": [],
      "keywords": [
        "migration guide"
      ]
    }
  },
  {
    "slug": "/migration-guides/migrate-to-v0-1-0",
    "title": "Migrate to v0.1.0",
    "description": "",
    "content": "### Summary\n\nThe `childInner` parameter of the `Tilt widget` has been changed to `childLayout.outer`.\n\n### Details\n\nBefore:\n\n```dart showLineNumbers\nTilt(\n  childInner: [\n    /// code\n  ]\n  ...\n)\n```\n\nAfter:\n\n```dart showLineNumbers\nTilt(\n  childLayout: ChildLayout(\n    outer: [\n      /// code\n    ]\n  )\n  ...\n)\n```\n",
    "_searchMeta": {
      "cleanContent": "summary the childinner parameter of the tilt widget has been changed to childlayout outer details before: after:",
      "headings": [],
      "keywords": [
        "migration guide",
        "childInner",
        "Tilt widget",
        "childLayout.outer",
        "dart showLineNumbers\nTilt(\n  childInner: [\n    /// code\n  ]\n  ...\n)",
        "After:",
        "dart showLineNumbers\nTilt(\n  childLayout: ChildLayout(\n    outer: [\n      /// code\n    ]\n  )\n  ...\n)"
      ]
    }
  },
  {
    "slug": "/migration-guides/migrate-to-v2-0-0",
    "title": "Migrate to v2.0.0",
    "description": "",
    "content": "### Summary\n\n* Bumping Flutter SDK minimum version to `3.3.0`.\n* Changed `enableMouseHover` in `TiltConfig` to `enableGestureHover`.\n* To keep the tilt, you need to configure `TiltConfig(enableRevert: false, enableSensorRevert: false,)`.\n\n### Details\n\n#### Changed `enableMouseHover` in `TiltConfig` to `enableGestureHover`.\n\n```diff {3-4}\nTilt(\n  tiltConfig: TiltConfig(\n-   enableMouseHover: false\n+   enableGestureHover: false\n  )\n  ...\n)\n```\n\n#### To keep the tilt.\n\n```diff {3-4}\nTilt(\n  tiltConfig: TiltConfig(\n+    enableRevert: false,\n+    enableSensorRevert: false,\n  )\n  ...\n)\n```\n",
    "_searchMeta": {
      "cleanContent": "summary bumping flutter sdk minimum version to 3 3 0 changed enablemousehover in tiltconfig to enablegesturehover to keep the tilt you need to configure tiltconfig enablerevert: false enablesensorrevert: false details changed enablemousehover in tiltconfig to enablegesturehover to keep the tilt",
      "headings": [],
      "keywords": [
        "migration guide",
        "3.3.0",
        "enableMouseHover",
        "TiltConfig",
        "enableGestureHover",
        "TiltConfig(enableRevert: false, enableSensorRevert: false,)",
        "diff {3-4}\nTilt(\n  tiltConfig: TiltConfig(\n-   enableMouseHover: false\n+   enableGestureHover: false\n  )\n  ...\n)",
        "#### To keep the tilt.",
        "diff {3-4}\nTilt(\n  tiltConfig: TiltConfig(\n+    enableRevert: false,\n+    enableSensorRevert: false,\n  )\n  ...\n)"
      ]
    }
  },
  {
    "slug": "/overview",
    "title": "Overview",
    "description": "",
    "content": "## Features ✨\n\n* 📦 Tilt effect\n* 🔦 Light effect\n* 💡 Shadow effect\n* 👀 Parallax effect\n* 📱 Gyroscope sensor support ([Sensors compatibility][])\n* 🧱 Multiple layouts\n* 👇 Supports hover, touch, and sensors events ([Gesture priority][])\n* 🖼️ Smooth animation\n* ⚙️ Many custom parameters\n\n<br />\n\n<Step>\n  <StepItem title=\"Get Started\" />\n\n  <StepItem title=\"Widgets\" />\n\n  <StepItem title=\"Examples\" />\n</Step>\n\n[Sensors compatibility]: /en/docs/installation/#sensors-compatibility\n\n[Gesture priority]: /en/docs/widgets/tilt-widget/#gesture-priority\n",
    "_searchMeta": {
      "cleanContent": "features tilt effect light effect shadow effect parallax effect gyroscope sensor support sensors compatibility multiple layouts supports hover touch and sensors events gesture priority smooth animation many custom parameters br stepitem title get started stepitem title widgets stepitem title examples sensors compatibility : en docs installation sensors-compatibility gesture priority : en docs widgets tilt-widget gesture-priority",
      "headings": [
        "Features ✨"
      ],
      "keywords": [
        "overview",
        "Features ✨"
      ]
    }
  },
  {
    "slug": "/widgets",
    "title": "Widgets",
    "description": "",
    "content": "",
    "_searchMeta": {
      "cleanContent": "",
      "headings": [],
      "keywords": [
        "widgets"
      ]
    }
  },
  {
    "slug": "/widgets/tilt-widget",
    "title": "Tilt widget",
    "description": "Learn about Tilt widget parameters. Tilt widget will have default tilt, shadow, and light effects.",
    "content": "## Gesture priority\n\nWhen multiple gestures are enabled, they are triggered based on priority:\n\n**Touch > Hover > Controller > Sensors**\n\n## Tilt widget parameters\n\n| Parameter                   | Type                                                                            | Default                | Description                                                          |\n| --------------------------- | ------------------------------------------------------------------------------- | ---------------------- | -------------------------------------------------------------------- |\n| child <sup>`required`</sup> | `Widget`                                                                        | -                      | Create a widget that its child widget can be tilted.                 |\n| childLayout                 | [`ChildLayout`][ChildLayout]                                                    | `ChildLayout()`        | Other child layouts. <br /> e.g. parallax outer, inner, behind.       |\n| tiltStreamController        | [`StreamController<TiltStreamModel>?`][StreamController<TiltStreamModel>] | `null`                 | `StreamController<TiltStreamModel>.broadcast()` to control the tilt. |\n| disable                     | `bool`                                                                          | `false`                | Disable all effects.                                                 |\n| fps                         | `int`                                                                           | `120`                  | Gesture triggered frames.                                            |\n| border                      | `BoxBorder?`                                                                    | `null`                 | BoxDecoration border.                                                |\n| borderRadius                | `BorderRadiusGeometry?`                                                         | `null`                 | BoxDecoration borderRadius.                                          |\n| clipBehavior                | `Clip`                                                                          | `Clip.antiAlias`       | Flutter clipBehavior.                                                |\n| tiltConfig                  | [`TiltConfig`][TiltConfig]                                                      | `TiltConfig()`         | Tilt effect config.                                                  |\n| lightShadowMode             | [`LightShadowMode`][LightShadowMode]                                            | `LightShadowMode.base` | Light & Shadow Mode.                                                 |\n| lightConfig                 | [`LightConfig`][LightConfig]                                                    | `LightConfig()`        | Light effect config.                                                 |\n| shadowConfig                | [`ShadowConfig`][ShadowConfig]                                                  | `ShadowConfig()`       | Shadow effect config.                                                |\n| onGestureMove               | `void Function(TiltDataModel, GesturesType)?`                                   | `null`                 | Gesture move callback.                                               |\n| onGestureLeave              | `void Function(TiltDataModel, GesturesType)?`                                   | `null`                 | Gesture leave callback.                                              |\n\n## ChildLayout\n\n| Parameter | Type           | Default      | Description                                                                                                              |\n| --------- | -------------- | ------------ | ------------------------------------------------------------------------------------------------------------------------ |\n| outer     | `List<Widget>` | `<Widget>[]` | As with Stack, you can use the Stack layout to create widgets that are outer of the child. <br /> e.g. parallax effects.  |\n| inner     | `List<Widget>` | `<Widget>[]` | As with Stack, you can use the Stack layout to create widgets that are inner of the child. <br /> e.g. parallax effects.  |\n| behind    | `List<Widget>` | `<Widget>[]` | As with Stack, you can use the Stack layout to create widgets that are behind of the child. <br /> e.g. parallax effects. |\n\n## StreamController\\<TiltStreamModel>\n\n```dart showLineNumbers\nfinal StreamController<TiltStreamModel> tiltStreamController = StreamController<TiltStreamModel>.broadcast();\n\n/// The current gesture is being used\ntiltStreamController.add(\n  TiltStreamModel(\n    position: Offset(xx, xx),\n  ),\n);\n\n/// Stop using the current gesture\ntiltStreamController.add(\n  TiltStreamModel(\n    position: Offset(xx, xx),\n    gestureUse: false,\n  ),\n);\n\n```\n\n<br />\n\n| Parameter                      | Type           | Default                   | Description|\n| ------------------------------ | -------------- | ------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| position <sup>`required`</sup> | `Offset`       | -                         | The current trigger position, <br /> It will have the tilt effect of the corresponding position. <br /> e.g. <br /> There is a widget size, width: 10, height: 10, <br /> (0, 0): Maximum tilt top left. <br /> (10, 10): Maximum tilt bottom right.                                                                                                                                                                                                                                                                                                     |\n| gesturesType                   | `GesturesType` | `GesturesType.controller` | Trigger gesture type. <br /> It is triggered according to the [gesture priority][]. <br /> If you need to customize the control with animation or other means. <br /> `Recommended` use of `GesturesType.controller`. <br /> If other types are used for triggering, <br /> Then it will be affected by the configuration and effects associated with that type. <br /> e.g. <br /> When custom triggering `GesturesType.sensors`. <br /> If `TiltConfig.enableSensorRevert` is configured to be false, <br /> it will also not revert to the initial state. |\n| gestureUse                     | `bool`         | `true`                    | Whether the gesture is being used. <br /> It is used to determine if the gesture is being used and will be processed according to the gesture priority. <br /> e.g. <br /> If `GesturesType.touch` is never assigned false when triggered, gestures with a lower priority than `GesturesType.touch` will never be triggered.                                                                                                                                                                                                                           |\n\n## TiltConfig\n\n| Parameter               | Type                   | Default                        | Description                                                                                                                                                                                                                                                                                 |\n| ----------------------- | ---------------------- | ------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| disable                 | `bool`                 | `false`                        | Only disable the tilt effect.                                                                                                                                                                                                                                                               |\n| initial                 | `Offset?`              | `null`                         | Initial tilt progress, range `(x, y): (1, 1) to (-1, -1)`, <br /> you can exceed the range, but the maximum tilt angle during gesture movement is always tilted according to `[TiltConfig.angle]`. <br /> e.g. (0.0, 0.0) center <br /> (1.0, 1.0) Maximum tilt top left `[TiltConfig.angle]`. |\n| angle                   | `double`               | `10.0`                         | Maximum tilt angle. <br /> e.g. 180 will flip.                                                                                                                                                                                                                                               |\n| direction               | `List<TiltDirection>?` | `null`                         | Tilt Direction, multiple directions, customized direction values.                                                                                                                                                                                                                           |\n| enableReverse           | `bool`                 | `false`                        | Tilt reverse, can be tilted up or down.                                                                                                                                                                                                                                                     |\n| filterQuality           | `FilterQuality`        | `null`                         | Flutter FilterQuality.                                                                                                                                                                                                                                                                      |\n| enableGestureSensors    | `bool`                 | `true`                         | Gyroscope sensor triggered tilt. <br /> Only the following gestures: <br /> `GesturesType.sensors`                                                                                                                                                                                            |\n| sensorFactor            | `double`               | `10.0`                         | Sensor trigger factor (sensitivity). <br /> Only the following gestures: <br /> `GesturesType.sensors`                                                                                                                                                                                        |\n| enableSensorRevert      | `bool`                 | `true`                         | Enable sensor tilt revert, will revert to the initial state. <br /> Only the following gestures: <br /> `GesturesType.sensors`                                                                                                                                                                |\n| sensorRevertFactor      | `double`               | `0.05`                         | Sensor revert factor (damping), range of values: `0-1`. <br /> Only the following gestures: <br /> `GesturesType.sensors`                                                                                                                                                                     |\n| sensorMoveDuration      | `Duration`             | `Duration(milliseconds: 50)`   | Animation duration during sensor move. <br /> Only the following gestures: <br /> `GesturesType.sensors`                                                                                                                                                                                      |\n| enableGestureHover      | `bool`                 | `true`                         | Hover gesture triggered tilt. <br /> Only the following gestures: <br /> `GesturesType.hover`                                                                                                                                                                                                 |\n| enableGestureTouch      | `bool`                 | `true`                         | Touch gesture triggered tilt. <br /> Only the following gestures: <br /> `GesturesType.touch`                                                                                                                                                                                                 |\n| enableRevert            | `bool`                 | `true`                         | Enable tilt revert, will revert to the initial state. <br /> Only the following gestures: <br /> `GesturesType.touch` <br /> `GesturesType.hover` <br /> `GesturesType.controller`                                                                                                              |\n| enableOutsideAreaMove   | `bool`                 | `true`                         | Tilt can continue to be triggered outside the area. <br /> Only the following gestures: <br /> `GesturesType.touch` <br /> `GesturesType.controller`                                                                                                                                           |\n| enterDuration           | `Duration`             | `Duration(milliseconds: 1000)` | Animation duration during gesture enter, must be used with `[moveDuration]` and `[enterToMoveDuration]`. <br /> Only the following gestures: <br /> `GesturesType.touch` <br /> `GesturesType.hover`                                                                                           |\n| moveDuration            | `Duration`             | `Duration(milliseconds: 100)`  | Animation duration during gesture move. <br /> Only the following gestures: <br /> `GesturesType.touch` <br /> `GesturesType.hover`                                                                                                                                                            |\n| enterToMoveDuration     | `Duration`             | `Duration(milliseconds: 600)`  | The duration of the transition from enter to move, must be used with `[enterDuration]` and `[moveDuration]`. <br /> Only the following gestures: <br /> `GesturesType.touch` <br /> `GesturesType.hover`                                                                                       |\n| leaveDuration           | `Duration`             | `Duration(milliseconds: 300)`  | Animation duration after gesture leave. <br /> Only the following gestures: <br /> `GesturesType.touch` <br /> `GesturesType.hover`                                                                                                                                                            |\n| moveCurve               | `Curve`                | `Curves.linear`                | Animation curve during gesture move. <br /> Only the following gestures: <br /> `GesturesType.touch` <br /> `GesturesType.hover`                                                                                                                                                               |\n| enterToMoveCurve        | `Curve`                | `Curves.easeOutCubic`          | The curve of the transition from enter to move, must be used with `[enterToMoveDuration]`. <br /> Only the following gestures: <br /> `GesturesType.touch` <br /> `GesturesType.hover`                                                                                                         |\n| leaveCurve              | `Curve`                | `Curves.linear`                | Animation curve after gesture leave. <br /> Only the following gestures: <br /> `GesturesType.touch` <br /> `GesturesType.hover`                                                                                                                                                               |\n| controllerMoveDuration  | `Duration`             | `Duration(milliseconds: 100)`  | Animation duration during controller gesture move. <br /> Only the following gestures: <br /> `GesturesType.controller`                                                                                                                                                                       |\n| controllerLeaveDuration | `Duration`             | `Duration(milliseconds: 300)`  | Animation duration after controller gesture leave. <br /> Only the following gestures: <br /> `GesturesType.controller`                                                                                                                                                                       |\n\n## LightShadowMode\n\n| Enum Value                | Description                                                                                                                                                                                                                                                                                                           |\n| ------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| LightShadowMode.base      | `[No performance risk]` <br /> Use normal shadow effects only for `Tilt.child` without performance degradation.                                                                                                                                                                                                        |\n| LightShadowMode.projector | `[Performance risk exists]` <br /> Apply a shadow to the entire `Tilt` widget, similar to a projector effect. <br /> will display a shadow that exactly matches the non-transparent parts of the widget. <br /> Recommended for the following scenarios: <br /> - Images only <br /> - No data states <br /> - No Hero tags |\n\n## LightConfig\n\n| Parameter      | Type             | Default                 | Description                                                                                                                                                                           |\n| -------------- | ---------------- | ----------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| disable        | `bool`           | `false`                 | Only disable the light effect.                                                                                                                                                        |\n| color          | `Color`          | `Color(0xFFFFFFFF)`     | Light color.                                                                                                                                                                          |\n| minIntensity   | `double`         | `0.0`                   | Color minimum opacity, also initial opacity.                                                                                                                                          |\n| maxIntensity   | `double`         | `0.5`                   | Color maximum opacity for tilt progresses.                                                                                                                                            |\n| spreadFactor   | `double`         | `4.0`                   | Light spread factor, relative to current widget size.                                                                                                                                 |\n| projectorScale | `double`         | `1.1`                   | Light area size scale. <br /> Only the following mode: <br /> `[LightShadowMode.projector]`                                                                                             |\n| direction      | `LightDirection` | `LightDirection.around` | Light direction. <br /> Affects: <br /> `[ShadowConfig.direction]` (not affected after configuration).                                                                                  |\n| enableReverse  | `bool`           | `false`                 | Reverse light direction. <br /> Affects: <br /> `[ShadowConfig.direction]` (not affected after configuration). <br /> `[ShadowConfig.enableReverse]` (not affected after configuration). |\n\n## ShadowConfig\n\n| Parameter              | Type               | Default             | Description                                                                                                                  |\n| ---------------------- | ------------------ | ------------------- | ---------------------------------------------------------------------------------------------------------------------------- |\n| disable                | `bool`             | `false`             | Only disable the shadow effect.                                                                                              |\n| color                  | `Color`            | `Color(0xFF9E9E9E)` | Shadow color.                                                                                                                |\n| minIntensity           | `double`           | `0.0`               | Color minimum opacity, also initial opacity.                                                                                 |\n| maxIntensity           | `double`           | `0.5`               | Color maximum opacity as tilt progresses.                                                                                    |\n| offsetInitial          | `Offset`           | `Offset(0.0, 0.0)`  | Initial value of shadow offset. <br /> e.g. (0.0, 0.0) center. <br /> (40.0, 40.0) Offset 40 to the top left.                  |\n| offsetFactor           | `double`           | `0.1`               | Shadow offset factor, relative to current widget size.                                                                       |\n| spreadInitial          | `double`           | `0.0`               | Initial value of shadow spread radius. <br /> Only the following mode: <br /> `[LightShadowMode.base]`                         |\n| spreadFactor           | `double`           | `0.0`               | Shadow spread radius factor, relative to current widget size. <br /> Only the following mode: <br /> `[LightShadowMode.base]`  |\n| minBlurRadius          | `double`           | `10.0`              | Minimum blur radius, also initial blur radius. <br /> Only the following mode: <br /> `[LightShadowMode.base]`                 |\n| maxBlurRadius          | `double`           | `20.0`              | Maximum blur radius for tilt progresses. <br /> Only the following mode: <br /> `[LightShadowMode.base]`                       |\n| projectorScaleFrom     | `double`           | `1.0`               | Size scale for minimum progress, also initial size scale. <br /> Only the following mode: <br /> `[LightShadowMode.projector]` |\n| projectorScaleTo       | `double`           | `1.0`               | Size scale for maximum progress. <br /> Only the following mode: <br /> `[LightShadowMode.projector]`                          |\n| projectorBlurSigmaFrom | `double`           | `5.0`               | Blur sigma for minimum progress, also initial blur sigma. <br /> Only the following mode: <br /> `[LightShadowMode.projector]` |\n| projectorBlurSigmaTo   | `double`           | `10.0`              | Blur sigma for maximum progress. <br /> Only the following mode: <br /> `[LightShadowMode.projector]`                          |\n| direction              | `ShadowDirection?` | `null`              | Shadow direction.                                                                                                            |\n| enableReverse          | `bool?`            | `null`              | Reverse shadow direction.                                                                                                    |\n\n[gesture priority]: #gesture-priority\n\n[Tilt widget parameters]: #tilt-widget-parameters\n\n[ChildLayout]: #childlayout\n\n[StreamController<TiltStreamModel>]: #streamcontrollertiltstreammodel\n\n[TiltConfig]: #tiltconfig\n\n[LightShadowMode]: #lightshadowmode\n\n[LightConfig]: #lightconfig\n\n[ShadowConfig]: #shadowconfig\n",
    "_searchMeta": {
      "cleanContent": "gesture priority when multiple gestures are enabled they are triggered based on priority: touch hover controller sensors tilt widget parameters parameter type default description--------------------------- ------------------------------------------------------------------------------- ---------------------- --------------------------------------------------------------------child sup required sup widget - create a widget that its child widget can be tilted childlayout childlayout childlayout childlayout other child layouts br e g parallax outer inner behind tiltstreamcontroller streamcontroller tiltstreammodel streamcontroller tiltstreammodel null streamcontroller tiltstreammodel broadcast to control the tilt disable bool false disable all effects fps int 120 gesture triggered frames border boxborder null boxdecoration border borderradius borderradiusgeometry null boxdecoration borderradius clipbehavior clip clip antialias flutter clipbehavior tiltconfig tiltconfig tiltconfig tiltconfig tilt effect config lightshadowmode lightshadowmode lightshadowmode lightshadowmode base light shadow mode lightconfig lightconfig lightconfig lightconfig light effect config shadowconfig shadowconfig shadowconfig shadowconfig shadow effect config ongesturemove void function tiltdatamodel gesturestype null gesture move callback ongestureleave void function tiltdatamodel gesturestype null gesture leave callback childlayout parameter type default description--------- -------------- ------------ ------------------------------------------------------------------------------------------------------------------------outer list widget widget as with stack you can use the stack layout to create widgets that are outer of the child br e g parallax effects inner list widget widget as with stack you can use the stack layout to create widgets that are inner of the child br e g parallax effects behind list widget widget as with stack you can use the stack layout to create widgets that are behind of the child br e g parallax effects streamcontroller tiltstreammodel br parameter type default descriptionposition sup required sup offset - the current trigger position br it will have the tilt effect of the corresponding position br e g br there is a widget size width: 10 height: 10 br 0 0 : maximum tilt top left br 10 10 : maximum tilt bottom right gesturestype gesturestype gesturestype controller trigger gesture type br it is triggered according to the gesture priority br if you need to customize the control with animation or other means br recommended use of gesturestype controller br if other types are used for triggering br then it will be affected by the configuration and effects associated with that type br e g br when custom triggering gesturestype sensors br if tiltconfig enablesensorrevert is configured to be false br it will also not revert to the initial state gestureuse bool true whether the gesture is being used br it is used to determine if the gesture is being used and will be processed according to the gesture priority br e g br if gesturestype touch is never assigned false when triggered gestures with a lower priority than gesturestype touch will never be triggered tiltconfig parameter type default description----------------------- ---------------------- ------------------------------ -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------disable bool false only disable the tilt effect initial offset null initial tilt progress range x y : 1 1 to -1 -1 br you can exceed the range but the maximum tilt angle during gesture movement is always tilted according to tiltconfig angle br e g 0 0 0 0 center br 1 0 1 0 maximum tilt top left tiltconfig angle angle double 10 0 maximum tilt angle br e g 180 will flip direction list tiltdirection null tilt direction multiple directions customized direction values enablereverse bool false tilt reverse can be tilted up or down filterquality filterquality null flutter filterquality enablegesturesensors bool true gyroscope sensor triggered tilt br only the following gestures: br gesturestype sensorssensorfactor double 10 0 sensor trigger factor sensitivity br only the following gestures: br gesturestype sensorsenablesensorrevert bool true enable sensor tilt revert will revert to the initial state br only the following gestures: br gesturestype sensorssensorrevertfactor double 0 05 sensor revert factor damping range of values: 0-1 br only the following gestures: br gesturestype sensorssensormoveduration duration duration milliseconds: 50 animation duration during sensor move br only the following gestures: br gesturestype sensorsenablegesturehover bool true hover gesture triggered tilt br only the following gestures: br gesturestype hoverenablegesturetouch bool true touch gesture triggered tilt br only the following gestures: br gesturestype touchenablerevert bool true enable tilt revert will revert to the initial state br only the following gestures: br gesturestype touch br gesturestype hover br gesturestype controllerenableoutsideareamove bool true tilt can continue to be triggered outside the area br only the following gestures: br gesturestype touch br gesturestype controllerenterduration duration duration milliseconds: 1000 animation duration during gesture enter must be used with moveduration and entertomoveduration br only the following gestures: br gesturestype touch br gesturestype hovermoveduration duration duration milliseconds: 100 animation duration during gesture move br only the following gestures: br gesturestype touch br gesturestype hoverentertomoveduration duration duration milliseconds: 600 the duration of the transition from enter to move must be used with enterduration and moveduration br only the following gestures: br gesturestype touch br gesturestype hoverleaveduration duration duration milliseconds: 300 animation duration after gesture leave br only the following gestures: br gesturestype touch br gesturestype hovermovecurve curve curves linear animation curve during gesture move br only the following gestures: br gesturestype touch br gesturestype hoverentertomovecurve curve curves easeoutcubic the curve of the transition from enter to move must be used with entertomoveduration br only the following gestures: br gesturestype touch br gesturestype hoverleavecurve curve curves linear animation curve after gesture leave br only the following gestures: br gesturestype touch br gesturestype hovercontrollermoveduration duration duration milliseconds: 100 animation duration during controller gesture move br only the following gestures: br gesturestype controllercontrollerleaveduration duration duration milliseconds: 300 animation duration after controller gesture leave br only the following gestures: br gesturestype controller lightshadowmode enum value description------------------------- ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------lightshadowmode base no performance risk br use normal shadow effects only for tilt child without performance degradation lightshadowmode projector performance risk exists br apply a shadow to the entire tilt widget similar to a projector effect br will display a shadow that exactly matches the non-transparent parts of the widget br recommended for the following scenarios: br - images only br - no data states br - no hero tags lightconfig parameter type default description-------------- ---------------- ----------------------- -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------disable bool false only disable the light effect color color color 0xffffffff light color minintensity double 0 0 color minimum opacity also initial opacity maxintensity double 0 5 color maximum opacity for tilt progresses spreadfactor double 4 0 light spread factor relative to current widget size projectorscale double 1 1 light area size scale br only the following mode: br lightshadowmode projector direction lightdirection lightdirection around light direction br affects: br shadowconfig direction not affected after configuration enablereverse bool false reverse light direction br affects: br shadowconfig direction not affected after configuration br shadowconfig enablereverse not affected after configuration shadowconfig parameter type default description---------------------- ------------------ ------------------- ----------------------------------------------------------------------------------------------------------------------------disable bool false only disable the shadow effect color color color 0xff9e9e9e shadow color minintensity double 0 0 color minimum opacity also initial opacity maxintensity double 0 5 color maximum opacity as tilt progresses offsetinitial offset offset 0 0 0 0 initial value of shadow offset br e g 0 0 0 0 center br 40 0 40 0 offset 40 to the top left offsetfactor double 0 1 shadow offset factor relative to current widget size spreadinitial double 0 0 initial value of shadow spread radius br only the following mode: br lightshadowmode base spreadfactor double 0 0 shadow spread radius factor relative to current widget size br only the following mode: br lightshadowmode base minblurradius double 10 0 minimum blur radius also initial blur radius br only the following mode: br lightshadowmode base maxblurradius double 20 0 maximum blur radius for tilt progresses br only the following mode: br lightshadowmode base projectorscalefrom double 1 0 size scale for minimum progress also initial size scale br only the following mode: br lightshadowmode projector projectorscaleto double 1 0 size scale for maximum progress br only the following mode: br lightshadowmode projector projectorblursigmafrom double 5 0 blur sigma for minimum progress also initial blur sigma br only the following mode: br lightshadowmode projector projectorblursigmato double 10 0 blur sigma for maximum progress br only the following mode: br lightshadowmode projector direction shadowdirection null shadow direction enablereverse bool null reverse shadow direction gesture priority : gesture-priority tilt widget parameters : tilt-widget-parameters childlayout : childlayout streamcontroller tiltstreammodel : streamcontrollertiltstreammodel tiltconfig : tiltconfig lightshadowmode : lightshadowmode lightconfig : lightconfig shadowconfig : shadowconfig",
      "headings": [
        "Gesture priority",
        "Tilt widget parameters",
        "ChildLayout",
        "StreamController\\<TiltStreamModel>",
        "TiltConfig",
        "LightShadowMode",
        "LightConfig",
        "ShadowConfig"
      ],
      "keywords": [
        "widgets",
        "tilt widget",
        "Gesture priority",
        "Tilt widget parameters",
        "ChildLayout",
        "StreamController\\<TiltStreamModel>",
        "TiltConfig",
        "LightShadowMode",
        "LightConfig",
        "ShadowConfig",
        "Touch > Hover > Controller > Sensors",
        "required",
        "Widget",
        "ChildLayout()",
        "StreamController<TiltStreamModel>?",
        "null",
        "StreamController<TiltStreamModel>.broadcast()",
        "bool",
        "false",
        "int",
        "120",
        "BoxBorder?",
        "BorderRadiusGeometry?",
        "Clip",
        "Clip.antiAlias",
        "TiltConfig()",
        "LightShadowMode.base",
        "LightConfig()",
        "ShadowConfig()",
        "void Function(TiltDataModel, GesturesType)?",
        "List<Widget>",
        "<Widget>[]",
        "dart showLineNumbers\nfinal StreamController<TiltStreamModel> tiltStreamController = StreamController<TiltStreamModel>.broadcast();\n\n/// The current gesture is being used\ntiltStreamController.add(\n  TiltStreamModel(\n    position: Offset(xx, xx),\n  ),\n);\n\n/// Stop using the current gesture\ntiltStreamController.add(\n  TiltStreamModel(\n    position: Offset(xx, xx),\n    gestureUse: false,\n  ),\n);",
        "<br />\n\n| Parameter                      | Type           | Default                   | Description|\n| ------------------------------ | -------------- | ------------------------- ||\n| position <sup>",
        "</sup> |",
        "| -                         | The current trigger position, <br /> It will have the tilt effect of the corresponding position. <br /> e.g. <br /> There is a widget size, width: 10, height: 10, <br /> (0, 0): Maximum tilt top left. <br /> (10, 10): Maximum tilt bottom right.                                                                                                                                                                                                                                                                                                     |\n| gesturesType                   |",
        "|",
        "| Trigger gesture type. <br /> It is triggered according to the [gesture priority][]. <br /> If you need to customize the control with animation or other means. <br />",
        "use of",
        ". <br /> If other types are used for triggering, <br /> Then it will be affected by the configuration and effects associated with that type. <br /> e.g. <br /> When custom triggering",
        ". <br /> If",
        "is configured to be false, <br /> it will also not revert to the initial state. |\n| gestureUse                     |",
        "| Whether the gesture is being used. <br /> It is used to determine if the gesture is being used and will be processed according to the gesture priority. <br /> e.g. <br /> If",
        "is never assigned false when triggered, gestures with a lower priority than",
        "will never be triggered.                                                                                                                                                                                                                           |\n\n## TiltConfig\n\n| Parameter               | Type                   | Default                        | Description                                                                                                                                                                                                                                                                                 |\n| ----------------------- | ---------------------- | ------------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| disable                 |",
        "| Only disable the tilt effect.                                                                                                                                                                                                                                                               |\n| initial                 |",
        "| Initial tilt progress, range",
        ", <br /> you can exceed the range, but the maximum tilt angle during gesture movement is always tilted according to",
        ". <br /> e.g. (0.0, 0.0) center <br /> (1.0, 1.0) Maximum tilt top left",
        ". |\n| angle                   |",
        "| Maximum tilt angle. <br /> e.g. 180 will flip.                                                                                                                                                                                                                                               |\n| direction               |",
        "| Tilt Direction, multiple directions, customized direction values.                                                                                                                                                                                                                           |\n| enableReverse           |",
        "| Tilt reverse, can be tilted up or down.                                                                                                                                                                                                                                                     |\n| filterQuality           |",
        "| Flutter FilterQuality.                                                                                                                                                                                                                                                                      |\n| enableGestureSensors    |",
        "| Gyroscope sensor triggered tilt. <br /> Only the following gestures: <br />",
        "|\n| sensorFactor            |",
        "| Sensor trigger factor (sensitivity). <br /> Only the following gestures: <br />",
        "|\n| enableSensorRevert      |",
        "| Enable sensor tilt revert, will revert to the initial state. <br /> Only the following gestures: <br />",
        "|\n| sensorRevertFactor      |",
        "| Sensor revert factor (damping), range of values:",
        ". <br /> Only the following gestures: <br />",
        "|\n| sensorMoveDuration      |",
        "| Animation duration during sensor move. <br /> Only the following gestures: <br />",
        "|\n| enableGestureHover      |",
        "| Hover gesture triggered tilt. <br /> Only the following gestures: <br />",
        "|\n| enableGestureTouch      |",
        "| Touch gesture triggered tilt. <br /> Only the following gestures: <br />",
        "|\n| enableRevert            |",
        "| Enable tilt revert, will revert to the initial state. <br /> Only the following gestures: <br />",
        "<br />",
        "|\n| enableOutsideAreaMove   |",
        "| Tilt can continue to be triggered outside the area. <br /> Only the following gestures: <br />",
        "|\n| enterDuration           |",
        "| Animation duration during gesture enter, must be used with",
        "and",
        "|\n| moveDuration            |",
        "| Animation duration during gesture move. <br /> Only the following gestures: <br />",
        "|\n| enterToMoveDuration     |",
        "| The duration of the transition from enter to move, must be used with",
        "|\n| leaveDuration           |",
        "| Animation duration after gesture leave. <br /> Only the following gestures: <br />",
        "|\n| moveCurve               |",
        "| Animation curve during gesture move. <br /> Only the following gestures: <br />",
        "|\n| enterToMoveCurve        |",
        "| The curve of the transition from enter to move, must be used with",
        "|\n| leaveCurve              |",
        "| Animation curve after gesture leave. <br /> Only the following gestures: <br />",
        "|\n| controllerMoveDuration  |",
        "| Animation duration during controller gesture move. <br /> Only the following gestures: <br />",
        "|\n| controllerLeaveDuration |",
        "| Animation duration after controller gesture leave. <br /> Only the following gestures: <br />",
        "|\n\n## LightShadowMode\n\n| Enum Value                | Description                                                                                                                                                                                                                                                                                                           |\n| ------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| LightShadowMode.base      |",
        "<br /> Use normal shadow effects only for",
        "without performance degradation.                                                                                                                                                                                                        |\n| LightShadowMode.projector |",
        "<br /> Apply a shadow to the entire",
        "widget, similar to a projector effect. <br /> will display a shadow that exactly matches the non-transparent parts of the widget. <br /> Recommended for the following scenarios: <br /> - Images only <br /> - No data states <br /> - No Hero tags |\n\n## LightConfig\n\n| Parameter      | Type             | Default                 | Description                                                                                                                                                                           |\n| -------------- | ---------------- | ----------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| disable        |",
        "| Only disable the light effect.                                                                                                                                                        |\n| color          |",
        "| Light color.                                                                                                                                                                          |\n| minIntensity   |",
        "| Color minimum opacity, also initial opacity.                                                                                                                                          |\n| maxIntensity   |",
        "| Color maximum opacity for tilt progresses.                                                                                                                                            |\n| spreadFactor   |",
        "| Light spread factor, relative to current widget size.                                                                                                                                 |\n| projectorScale |",
        "| Light area size scale. <br /> Only the following mode: <br />",
        "|\n| direction      |",
        "| Light direction. <br /> Affects: <br />",
        "(not affected after configuration).                                                                                  |\n| enableReverse  |",
        "| Reverse light direction. <br /> Affects: <br />",
        "(not affected after configuration). <br />",
        "(not affected after configuration). |\n\n## ShadowConfig\n\n| Parameter              | Type               | Default             | Description                                                                                                                  |\n| ---------------------- | ------------------ | ------------------- | ---------------------------------------------------------------------------------------------------------------------------- |\n| disable                |",
        "| Only disable the shadow effect.                                                                                              |\n| color                  |",
        "| Shadow color.                                                                                                                |\n| minIntensity           |",
        "| Color minimum opacity, also initial opacity.                                                                                 |\n| maxIntensity           |",
        "| Color maximum opacity as tilt progresses.                                                                                    |\n| offsetInitial          |",
        "| Initial value of shadow offset. <br /> e.g. (0.0, 0.0) center. <br /> (40.0, 40.0) Offset 40 to the top left.                  |\n| offsetFactor           |",
        "| Shadow offset factor, relative to current widget size.                                                                       |\n| spreadInitial          |",
        "| Initial value of shadow spread radius. <br /> Only the following mode: <br />",
        "|\n| spreadFactor           |",
        "| Shadow spread radius factor, relative to current widget size. <br /> Only the following mode: <br />",
        "|\n| minBlurRadius          |",
        "| Minimum blur radius, also initial blur radius. <br /> Only the following mode: <br />",
        "|\n| maxBlurRadius          |",
        "| Maximum blur radius for tilt progresses. <br /> Only the following mode: <br />",
        "|\n| projectorScaleFrom     |",
        "| Size scale for minimum progress, also initial size scale. <br /> Only the following mode: <br />",
        "|\n| projectorScaleTo       |",
        "| Size scale for maximum progress. <br /> Only the following mode: <br />",
        "|\n| projectorBlurSigmaFrom |",
        "| Blur sigma for minimum progress, also initial blur sigma. <br /> Only the following mode: <br />",
        "|\n| projectorBlurSigmaTo   |",
        "| Blur sigma for maximum progress. <br /> Only the following mode: <br />",
        "|\n| direction              |",
        "| Shadow direction.                                                                                                            |\n| enableReverse          |"
      ]
    }
  },
  {
    "slug": "/widgets/tiltparallax-widget",
    "title": "TiltParallax widget",
    "description": "Learn about TiltParallax widget parameters. Parallax effect in the Tilt widget.",
    "content": "TiltParallax widget can only be used in the `childLayout` of `Tilt` widget.\n\n## TiltParallax widget parameters\n\n| Parameter                   | Type            | Default              | Description                    |\n| --------------------------- | --------------- | -------------------- | ------------------------------ |\n| child <sup>`required`</sup> | `Widget`        | -                    | Create a widget with parallax. |\n| size                        | `Offset`        | `Offset(10.0, 10.0)` | Parallax size.                 |\n| filterQuality               | `FilterQuality` | `null`               | Flutter FilterQuality.         |\n",
    "_searchMeta": {
      "cleanContent": "tiltparallax widget can only be used in the childlayout of tilt widget tiltparallax widget parameters parameter type default description--------------------------- --------------- -------------------- ------------------------------child sup required sup widget - create a widget with parallax size offset offset 10 0 10 0 parallax size filterquality filterquality null flutter filterquality",
      "headings": [
        "TiltParallax widget parameters"
      ],
      "keywords": [
        "widgets",
        "TiltParallax widget",
        "TiltParallax widget parameters",
        "childLayout",
        "Tilt",
        "required",
        "Widget",
        "Offset",
        "Offset(10.0, 10.0)",
        "FilterQuality",
        "null"
      ]
    }
  }
]